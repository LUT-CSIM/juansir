# Generated by Django 4.2.23 on 2025-08-02 06:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DefectTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_code', models.CharField(max_length=64, unique=True, verbose_name='病害编号')),
                ('start_frame', models.PositiveIntegerField(verbose_name='起始帧')),
                ('end_frame', models.PositiveIntegerField(verbose_name='结束帧')),
                ('start_time', models.FloatField(blank=True, null=True, verbose_name='起始时间(秒)')),
                ('end_time', models.FloatField(blank=True, null=True, verbose_name='结束时间(秒)')),
                ('develop_trend', models.CharField(blank=True, help_text='如扩大/无变化/已修复', max_length=32, verbose_name='发展趋势')),
                ('snapshot_link', models.URLField(blank=True, verbose_name='病害截图链接')),
            ],
            options={
                'verbose_name': '缺陷轨迹',
                'verbose_name_plural': '缺陷轨迹',
                'db_table': 'defect_track',
            },
        ),
        migrations.CreateModel(
            name='DetectionBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='起飞时间')),
                ('end_time', models.DateTimeField(verbose_name='降落时间')),
                ('airport', models.CharField(max_length=32, verbose_name='起降机场')),
                ('drone_id', models.CharField(max_length=32, verbose_name='无人机编号')),
                ('status', models.CharField(default='done', help_text='如 done/processing/failed，后续可扩展独立状态表', max_length=16, verbose_name='批次状态')),
                ('video_link', models.URLField(blank=True, verbose_name='视频链接')),
                ('flight_duration', models.FloatField(blank=True, null=True, verbose_name='飞行时长(分钟)')),
                ('recharge_time', models.FloatField(blank=True, null=True, verbose_name='充电时长(分钟)')),
                ('total_frames', models.PositiveIntegerField(blank=True, null=True, verbose_name='采集帧数')),
                ('video_duration', models.FloatField(blank=True, null=True, verbose_name='视频时长(秒)')),
                ('is_archived', models.BooleanField(default=False, verbose_name='已归档')),
                ('expire_at', models.DateTimeField(blank=True, null=True, verbose_name='到期时间')),
            ],
            options={
                'verbose_name': '检测批次',
                'verbose_name_plural': '检测批次',
                'db_table': 'detection_batch',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='DiseaseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='病害名称')),
                ('description', models.TextField(blank=True, verbose_name='病害描述')),
            ],
            options={
                'verbose_name': '病害类型',
                'verbose_name_plural': '病害类型',
                'db_table': 'disease_type',
            },
        ),
        migrations.CreateModel(
            name='MediaType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True, verbose_name='类型名称')),
                ('code', models.CharField(max_length=16, unique=True, verbose_name='代码')),
            ],
            options={
                'verbose_name': '媒体类型',
                'verbose_name_plural': '媒体类型',
                'db_table': 'media_type',
            },
        ),
        migrations.CreateModel(
            name='ReportType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='报表名称')),
                ('code', models.CharField(max_length=16, unique=True, verbose_name='代码')),
                ('description', models.CharField(blank=True, max_length=128, verbose_name='说明')),
            ],
            options={
                'verbose_name': '报表类型',
                'verbose_name_plural': '报表类型',
                'db_table': 'report_type',
            },
        ),
        migrations.CreateModel(
            name='SeverityLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='严重等级')),
                ('code', models.CharField(max_length=16, unique=True, verbose_name='代码')),
                ('description', models.CharField(blank=True, max_length=128, verbose_name='说明')),
            ],
            options={
                'verbose_name': '严重程度',
                'verbose_name_plural': '严重程度',
                'db_table': 'severity_level',
            },
        ),
        migrations.CreateModel(
            name='WeatherType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True, verbose_name='天气名称')),
                ('code', models.CharField(help_text='英文或拼音等唯一标识', max_length=16, unique=True, verbose_name='代码')),
            ],
            options={
                'verbose_name': '天气类型',
                'verbose_name_plural': '天气类型',
                'db_table': 'weather_type',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generated_at', models.DateTimeField(auto_now_add=True, verbose_name='生成时间')),
                ('file_link', models.URLField(blank=True, verbose_name='报表文件链接')),
                ('content', models.TextField(blank=True, verbose_name='报表内容简要')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.detectionbatch', verbose_name='检测批次')),
                ('report_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.reporttype', verbose_name='报表类型')),
            ],
            options={
                'verbose_name': '检测报表',
                'verbose_name_plural': '检测报表',
                'db_table': 'report',
            },
        ),
        migrations.CreateModel(
            name='GroundTruthFrame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frame_index', models.PositiveIntegerField(verbose_name='帧序号')),
                ('time', models.FloatField(blank=True, null=True, verbose_name='时间(秒)')),
                ('bbox_x', models.FloatField(help_text='归一化坐标0-1', verbose_name='框左上角X')),
                ('bbox_y', models.FloatField(help_text='归一化坐标0-1', verbose_name='框左上角Y')),
                ('bbox_width', models.FloatField(help_text='归一化比例0-1', verbose_name='框宽度')),
                ('bbox_height', models.FloatField(help_text='归一化比例0-1', verbose_name='框高度')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frames', to='web.defecttrack', verbose_name='缺陷轨迹')),
            ],
            options={
                'verbose_name': '缺陷帧标注',
                'verbose_name_plural': '缺陷帧标注',
                'db_table': 'ground_truth_frame',
                'ordering': ['frame_index'],
            },
        ),
        migrations.CreateModel(
            name='DiseaseMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_link', models.URLField(verbose_name='文件链接')),
                ('description', models.CharField(blank=True, max_length=128, verbose_name='描述')),
                ('defect_track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='web.defecttrack', verbose_name='病害轨迹')),
                ('media_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.mediatype', verbose_name='媒体类型')),
            ],
            options={
                'verbose_name': '病害媒体',
                'verbose_name_plural': '病害媒体',
                'db_table': 'disease_media',
            },
        ),
        migrations.AddField(
            model_name='detectionbatch',
            name='weather',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.weathertype', verbose_name='天气'),
        ),
        migrations.AddField(
            model_name='defecttrack',
            name='batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.detectionbatch', verbose_name='检测批次'),
        ),
        migrations.AddField(
            model_name='defecttrack',
            name='disease_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.diseasetype', verbose_name='病害类型'),
        ),
        migrations.AddField(
            model_name='defecttrack',
            name='report',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.report', verbose_name='关联报表'),
        ),
        migrations.AddField(
            model_name='defecttrack',
            name='severity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.severitylevel', verbose_name='严重程度'),
        ),
    ]
